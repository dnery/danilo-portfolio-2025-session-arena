version: "3.9"

name: arena
services: 

  app:
    # FIXME use image with GH actions (built by GHCR)
    # image: ghcr.io/dnery/session-arena:master
    build: .
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      start_period: 3s
      interval: 6s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  worker:
    # FIXME use image with GH actions (built by GHCR)
    # image: ghcr.io/dnery/session-arena:master
    build: .
    command: uv run celery -A app.celery_app worker --log_level=INFO
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  db:
    image: postgres:16-trixie
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
    volumes:
      - pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arena"]
      start_period: 3s
      interval: 6s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  redis:
    image: redis:7-bookworm
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  pg: {}
